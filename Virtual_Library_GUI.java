/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *GUI for virtual library
 * @author Dalton Graber
 */
public class Virtual_Library_GUI extends javax.swing.JFrame {
    booksForLibrary books;
    /**
     * Creates new form Virtual_Library_GUI
     */
    public Virtual_Library_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchBarBook = new javax.swing.JTextField();
        searchButtonBook = new javax.swing.JButton();
        searchLabelBook = new javax.swing.JLabel();
        searchLabelAuthor = new javax.swing.JLabel();
        searchBarAuthor = new javax.swing.JTextField();
        searchButtonAuthor = new javax.swing.JButton();
        bookAvailableLabel = new javax.swing.JLabel();
        authorAvailableLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Virtual Library");

        searchBarBook.setText("jTextField1");
        searchBarBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarBookActionPerformed(evt);
            }
        });

        searchButtonBook.setText("Search");

        searchLabelBook.setText("Enter name of book ");

        searchLabelAuthor.setText("Enter name of Author");

        searchBarAuthor.setText("jTextField1");

        searchButtonAuthor.setText("Search");
        searchButtonAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonAuthorActionPerformed(evt);
            }
        });

        bookAvailableLabel.setText("Availablility");

        authorAvailableLabel.setText("Availablility");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchLabelBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(searchBarBook)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBarAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchLabelAuthor)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookAvailableLabel)
                            .addComponent(searchButtonBook)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchButtonAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(authorAvailableLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(searchLabelBook, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchBarBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(bookAvailableLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButtonBook)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchLabelAuthor)
                .addGap(18, 18, 18)
                .addComponent(searchBarAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(authorAvailableLabel)
                .addGap(18, 18, 18)
                .addComponent(searchButtonAuthor)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBarBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarBookActionPerformed
        String nameOfBook = searchBarBook.getText();
        if (books.equalsBooks(nameOfBook)){
            bookAvailableLabel.setText("Book is available!");
        }else{
            bookAvailableLabel.setText("Book is unavailable.");
        }
    }//GEN-LAST:event_searchBarBookActionPerformed

    private void searchButtonAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonAuthorActionPerformed
        String nameOfAuthor = searchBarAuthor.getText();
        if (books.equalsAuthor(nameOfAuthor)){
            authorAvailableLabel.setText("Books from this author are available!");
        }else{
            authorAvailableLabel.setText("Books from this author aren't unavailable.");
        }
    }//GEN-LAST:event_searchButtonAuthorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Virtual_Library_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Virtual_Library_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Virtual_Library_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Virtual_Library_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Virtual_Library_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorAvailableLabel;
    private javax.swing.JLabel bookAvailableLabel;
    private javax.swing.JTextField searchBarAuthor;
    private javax.swing.JTextField searchBarBook;
    private javax.swing.JButton searchButtonAuthor;
    private javax.swing.JButton searchButtonBook;
    private javax.swing.JLabel searchLabelAuthor;
    private javax.swing.JLabel searchLabelBook;
    // End of variables declaration//GEN-END:variables
}
